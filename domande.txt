Fornisci una risposta alle seguenti domande. Troverai le risposte corrette in fondo!

1. Cos’è ReactJS? (risposta aperta)
    ReactJS é una delle librerie di frontend più utilizzate al mondo per creare interfacce utente. Sviluppato da Meta (Facebook) nel 2011
    e dal 2013 é Open Source

2. ReactJS è un framework, non una libreria. (v/f)
    FALSO

3. Il file package.json contiene…
    1.Informazioni non essenziali, può essere tranquillamente eliminato
    2.Solamente il nome e la versione dell’applicazione
    3.Molte informazioni utili, come ad esempio l’elenco di tutte le dipendenze richieste dall’applicazione 
    4.Il primo componente React caricato all’avvio
    RISPOSTA CORRETTA: 3

4. create-react-app è l’unico modo possibile per creare un’applicazione React (v/f)
    FALSO

5. Qual è il comando da lanciare nel terminale per creare una nuova create-react-app con nome “test”?
    1. npx create-react-app test 
    2. npm create-react-app test
    3. npx create-react-app-test
    4. npx create-new-react-app test
    RISPOSTA CORRETTA: 1

6. Cos’è un componente React?
    1. Una libreria che è necessario importare dentro l’applicazione
    2. Una pagina ben specifica all’interno dell’applicazione
    3. Un blocco di logica/contenuto riutilizzabile all’interno dell’applicazione
    4. Una landing page per l’applicazione
    RISPOSTA CORRETTA: 3

7. Un componente React può venire creato in tre modi: come funzione, classe o interfaccia. (v/f)
    FALSO

8. Qual è la differenza tra componenti creati come funzione e componenti creati come classe?
    1. I componenti creati come funzione sono più semplici da scrivere ma con meno funzionalità,
    mentre i componenti creati come classe necessitano in genere di un maggior numero di linee di codice ma possiedono più funzionalità.
    2. I componenti creati come classe sono più semplici da scrivere ma con meno funzionalità,
    mentre i componenti creati come funzione necessitano in genere di un maggior numero di linee di codice ma possiedono più funzionalità.
    RISPOSTA CORRETTA: 1

9. Le props sono frammenti di informazione assegnati all’invocazione di un componente React,
    utili al fine di rendere il componente dinamico e più riutilizzabile. (v/f)
    VERO

10. Le props possono essere passate solamente da un componente genitore ad un componente figlio, non è possibile fare il contrario (v/f)
    VERO

11. Da dove possono venire recuperate le props all’interno di un componente React creato come classe?
    1. Sono proprietà contenute in un oggetto accessibile attraverso i parametri della funzione
    2. Possono essere recuperate all’interno dello oggetto ‘this’, dentro un sotto-oggetto chiamato ‘props’
    3. Vengono applicate come proprietà dell’oggetto globale ‘window’
    4. Vengono applicate come proprietà dell’oggetto ‘document’
    RISPOSTA CORRETTA: 2